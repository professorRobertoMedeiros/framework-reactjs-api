/**
 * Opções de configuração do Swagger
 */
export interface SwaggerConfigOptions {
    /**
     * Título da API (padrão: 'API Documentation')
     */
    title?: string;
    /**
     * Descrição da API (padrão: 'API documentation generated by Framework ReactJS API')
     */
    description?: string;
    /**
     * Versão da API (padrão: '1.0.0')
     */
    version?: string;
    /**
     * URL base do servidor (padrão: 'http://localhost:3000')
     */
    serverUrl?: string;
    /**
     * Descrição do servidor (padrão: 'Development server')
     */
    serverDescription?: string;
    /**
     * Servidores adicionais
     */
    servers?: Array<{
        url: string;
        description: string;
    }>;
    /**
     * Tags para organizar endpoints
     */
    tags?: Array<{
        name: string;
        description: string;
    }>;
    /**
     * Paths dos arquivos para documentar (padrão: ['./src/**\/*.ts'])
     */
    apis?: string[];
    /**
     * Informações de contato
     */
    contact?: {
        name: string;
        email?: string;
        url?: string;
    };
    /**
     * Informações de licença
     */
    license?: {
        name: string;
        url?: string;
    };
    /**
     * Configuração de autenticação JWT
     */
    enableJWT?: boolean;
    /**
     * Security schemes adicionais
     */
    securitySchemes?: Record<string, any>;
}
/**
 * Gera a especificação do Swagger
 *
 * @param options Opções de configuração
 * @returns Especificação do Swagger
 */
export declare function generateSwaggerSpec(options?: SwaggerConfigOptions): object;
/**
 * Configurações padrão para swagger-ui-express
 */
export declare const swaggerUIOptions: {
    customCss: string;
    customSiteTitle: string;
    swaggerOptions: {
        persistAuthorization: boolean;
        displayRequestDuration: boolean;
        filter: boolean;
        tryItOutEnabled: boolean;
    };
};
/**
 * Gera documentação Swagger para rotas de autenticação padrão
 */
export declare const authSwaggerDocs = "\n/**\n * @swagger\n * /api/auth/login:\n *   post:\n *     tags:\n *       - Authentication\n *     summary: Login to the system\n *     description: Authenticate user and return JWT token\n *     requestBody:\n *       required: true\n *       content:\n *         application/json:\n *           schema:\n *             type: object\n *             required:\n *               - email\n *               - password\n *             properties:\n *               email:\n *                 type: string\n *                 format: email\n *                 example: user@example.com\n *               password:\n *                 type: string\n *                 format: password\n *                 example: password123\n *     responses:\n *       200:\n *         description: Login successful\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 token:\n *                   type: string\n *                   description: JWT token\n *                 user:\n *                   type: object\n *                   properties:\n *                     id:\n *                       type: number\n *                     email:\n *                       type: string\n *                     first_name:\n *                       type: string\n *                     last_name:\n *                       type: string\n *       401:\n *         description: Invalid credentials\n *         content:\n *           application/json:\n *             schema:\n *               $ref: '#/components/schemas/Error'\n * \n * /api/auth/register:\n *   post:\n *     tags:\n *       - Authentication\n *     summary: Register a new user\n *     description: Create a new user account\n *     requestBody:\n *       required: true\n *       content:\n *         application/json:\n *           schema:\n *             type: object\n *             required:\n *               - email\n *               - password\n *               - first_name\n *               - last_name\n *             properties:\n *               email:\n *                 type: string\n *                 format: email\n *                 example: newuser@example.com\n *               password:\n *                 type: string\n *                 format: password\n *                 example: password123\n *               first_name:\n *                 type: string\n *                 example: John\n *               last_name:\n *                 type: string\n *                 example: Doe\n *     responses:\n *       201:\n *         description: User created successfully\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 token:\n *                   type: string\n *                   description: JWT token\n *                 user:\n *                   type: object\n *                   properties:\n *                     id:\n *                       type: number\n *                     email:\n *                       type: string\n *                     first_name:\n *                       type: string\n *                     last_name:\n *                       type: string\n *       400:\n *         description: Invalid input or user already exists\n *         content:\n *           application/json:\n *             schema:\n *               $ref: '#/components/schemas/Error'\n * \n * /api/auth/me:\n *   get:\n *     tags:\n *       - Authentication\n *     summary: Get current user\n *     description: Get information about the authenticated user\n *     security:\n *       - bearerAuth: []\n *     responses:\n *       200:\n *         description: User information\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 id:\n *                   type: number\n *                 email:\n *                   type: string\n *                 first_name:\n *                   type: string\n *                 last_name:\n *                   type: string\n *                 active:\n *                   type: boolean\n *       401:\n *         description: Unauthorized\n *         content:\n *           application/json:\n *             schema:\n *               $ref: '#/components/schemas/Error'\n */\n";
