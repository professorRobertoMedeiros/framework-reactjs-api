# ====================================
# CONFIGURAÇÃO DO BANCO DE DADOS
# ====================================

# Host do PostgreSQL
DB_HOST=localhost

# Porta do PostgreSQL
DB_PORT=5432

# Nome do banco de dados
DB_NAME=seu_banco

# Usuário do PostgreSQL
DB_USER=postgres

# Senha do PostgreSQL
DB_PASSWORD=sua_senha

# ====================================
# AUTENTICAÇÃO JWT
# ====================================

# Chave secreta para assinar tokens JWT
# IMPORTANTE: Gere uma chave forte e única em produção
# Exemplo: openssl rand -base64 32
JWT_SECRET=sua_chave_secreta_aqui

# Tempo de expiração do token (padrão: 24h)
JWT_EXPIRES_IN=24h

# ====================================
# SERVIDOR
# ====================================

# Porta onde o servidor será executado
PORT=3000

# Ambiente (development, production, test)
NODE_ENV=development

# ====================================
# SISTEMA DE LOGS
# ====================================

# Habilitar sistema de logs (true/false)
LOG_ENABLED=true

# Nível de log: debug | info | warn | error
# - debug: Logs muito detalhados (desenvolvimento)
# - info: Logs informativos (padrão)
# - warn: Avisos
# - error: Apenas erros
LOG_LEVEL=info

# Habilitar logs de queries SQL (true/false)
# Logs gerados: logs/sql-YYYY-MM-DD.log
LOG_SQL=true

# Habilitar logs de requisições HTTP (true/false)
# Logs gerados: logs/http-YYYY-MM-DD.log
LOG_HTTP=true

# Diretório dos arquivos de log (padrão: ./logs)
LOG_FILE_PATH=./logs

# ====================================
# SCHEDULER DE JOBS
# ====================================

# Habilitar sistema de scheduler (true/false)
SCHEDULER_ENABLED=true

# Iniciar scheduler automaticamente quando o projeto iniciar (true/false)
# Se false, o scheduler precisa ser iniciado manualmente via API (POST /scheduler/start)
SCHEDULER_AUTO_START=true

# Número máximo de jobs executando simultaneamente
SCHEDULER_MAX_CONCURRENT=5

# Intervalo de verificação de jobs prontos (em milissegundos)
# Padrão: 60000 (1 minuto)
SCHEDULER_CHECK_INTERVAL=60000

# Tempo limite para considerar um job travado (em minutos)
# Jobs marcados como 'running' por mais tempo serão considerados travados
SCHEDULER_STUCK_THRESHOLD=30

# ====================================
# RABBITMQ (MENSAGERIA)
# ====================================

# URL de conexão do RabbitMQ
# Formato: amqp://usuario:senha@host:porta/vhost
# Padrão local: amqp://guest:guest@localhost:5672
RABBITMQ_URL=amqp://guest:guest@localhost:5672

# Prefetch count (número de mensagens não-confirmadas por consumer)
# Quanto menor, mais distribuído entre consumers
# Padrão: 1
RABBITMQ_PREFETCH=1

# Número máximo de tentativas de reconexão
# Padrão: 10
RABBITMQ_MAX_RECONNECT_ATTEMPTS=10

# Delay entre tentativas de reconexão (em milissegundos)
# Padrão: 5000 (5 segundos)
RABBITMQ_RECONNECT_DELAY=5000

# ====================================
# CONFIGURAÇÕES DE PRODUÇÃO
# ====================================

# Em produção, recomenda-se:
# LOG_LEVEL=warn
# LOG_SQL=false (ou apenas errors)
# LOG_HTTP=true
# SCHEDULER_AUTO_START=true
# SCHEDULER_MAX_CONCURRENT=3
